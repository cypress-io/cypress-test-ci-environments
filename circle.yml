version: 2

# all images have same environment variables
environment: &environment
  environment:
    TERM: xterm
    npm_config_loglevel: warn
    # even when running as non-root user
    # need to set unsafe perm to be able to do `npm postinstall`
    npm_config_unsafe-perm: true

defaults: &defaults
  parallelism: 1
  working_directory: ~/app
  docker:
    # be explicit about the Docker image we use
    # probably matches the current bundled version of Node in the test runner
    - image: cypress/base:12.0.0-libgbm

jobs:
  lint:
    <<: *defaults
    <<: *environment
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ checksum "package.json" }}
      - run: npm ci
      - save_cache:
          key: cache-{{ checksum "package.json" }}
          paths:
            - ~/.npm
      - run: npm run lint

  ## Docker image without XVFB - Cypress should NOT work
  test-bare:
    <<: *defaults
    <<: *environment
    # override just the docker image
    docker:
      - image: node:12
    steps:
      - checkout
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - run: $(npm bin)/commit-message-install --else "npm install cypress"
      - run: $(npm bin)/run-if npm run test-bare
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  ## Docker image with XVFB - Cypress should NOT work
  test-xvfb:
    <<: *defaults
    <<: *environment
    docker:
      # the image comes from https://github.com/cypress-io/cypress-internal-docker-images
      - image: cypressinternal/xvfb:12.13.0
    steps:
      - checkout
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - run: $(npm bin)/commit-message-install --else "npm install cypress"
      - run: $(npm bin)/run-if npm run test-xvfb
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  ## Docker image with all dependencies - Cypress should work
  test-full:
    <<: *defaults
    <<: *environment
    steps:
      - checkout
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - run: ls node_modules/.bin
      - run: $(npm bin)/commit-message-install --else "npm install cypress"
      - run: $(npm bin)/run-if npm run verify
      - run: $(npm bin)/run-if npm run test-full
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  # TODO: investgate why this began failing with 5.0.0
  # Good image - except the user set DISPLAY to some wrong value
  # our "cypress verify" and "cypress run"  should retry automatically and work
  # test-bad-display-variable:
  #   <<: *defaults
  #   <<: *environment
  #   steps:
  #     - run: echo "TERM is $TERM"
  #     - checkout
  #     - run: npm install
  #     - run: npm install @cypress/commit-message-install
  #     - run: ls node_modules/.bin
  #     - run: $(npm bin)/commit-message-install --else "npm install cypress"
  #     # do not verify Cypress binary - it will be done from the test
  #     - run: $(npm bin)/run-if npm run test-display-retry
  #     - run:
  #         when: on_fail
  #         name: Set status check
  #         command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  test-full-node10.15.3:
    <<: *defaults
    <<: *environment
    docker:
      - image: cypress/base:10.15.3
    steps:
      - checkout
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - run: $(npm bin)/commit-message-install --else "npm install cypress"
      - run: $(npm bin)/run-if npm run verify
      - run: $(npm bin)/run-if npm run test-full
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  ## Centos7 image - Cypress should work
  test-centos7:
    <<: *environment
    <<: *defaults
    # override just the docker image
    docker:
      - image: cypress/base:centos7
    steps:
      - checkout
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - run: $(npm bin)/commit-message-install --else "npm install cypress"
      - run: $(npm bin)/run-if npm run verify
      - run: $(npm bin)/run-if npm run test-full
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  test-ubuntu16-node12:
    <<: *defaults
    <<: *environment
    # override just the docker image
    docker:
      - image: cypress/base:ubuntu16-12.13.1
    steps:
      - run: git --version
      - checkout
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - run: $(npm bin)/commit-message-install --else "npm install cypress"
      - run: $(npm bin)/run-if npm run verify
      - run: $(npm bin)/run-if npm run test-full
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  test-ubuntu18-node12.14.1:
    <<: *defaults
    <<: *environment
    # override just the docker image
    docker:
      - image: cypress/base:ubuntu18-node12.14.1
    steps:
      - run: git --version
      - checkout
      - run: apt-get install -y libgbm-dev
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - run: $(npm bin)/commit-message-install --else "npm install cypress"
      - run: $(npm bin)/run-if npm run verify
      - run: $(npm bin)/run-if npm run test-full
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  test-ubuntu19-node12.14.1:
    <<: *defaults
    <<: *environment
    # override just the docker image
    docker:
      - image: cypress/base:ubuntu19-node12.14.1
    steps:
      - run: git --version
      - checkout
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - run: $(npm bin)/commit-message-install --else "npm install cypress"
      - run: $(npm bin)/run-if npm run verify
      - run: $(npm bin)/run-if npm run test-full
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

  after-tests:
    <<: *defaults
    <<: *environment
    steps:
      - checkout
      - run: npm install
      - run: npm install @cypress/commit-message-install
      - run:
          when: on_success
          name: Set status check
          command: $(npm bin)/set-status --state success --description "on CircleCI"

workflows:
  version: 2
  build_and_test:
    jobs:
      - lint
      - test-full:
          context: test-runner:commit-status-checks
      - test-full-node10.15.3:
          context: test-runner:commit-status-checks
      - test-bare:
          context: test-runner:commit-status-checks
      - test-xvfb:
          context: test-runner:commit-status-checks
      - test-ubuntu16-node12:
          context: test-runner:commit-status-checks
      - test-ubuntu18-node12.14.1:
          context: test-runner:commit-status-checks
      - test-ubuntu19-node12.14.1:
          context: test-runner:commit-status-checks
      # - test-bad-display-variable:
      #     context: test-runner:commit-status-checks
      # disabling this test - has been failing forever
      # https://github.com/cypress-io/cypress-test-ci-environments/issues/7
      # - test-centos7

      - after-tests:
          context: test-runner:commit-status-checks
          requires:
            - lint
            - test-full
            - test-full-node10.15.3
            - test-bare
            - test-xvfb
            - test-ubuntu16-node12
            - test-ubuntu18-node12.14.1
            - test-ubuntu19-node12.14.1
            # - test-bad-display-variable
